package com.pharos.walker.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.pharos.walker.beans.ActivationCodeBean;
import com.pharos.walker.beans.EvaluateEntity;
import com.pharos.walker.beans.GloveBean;
import com.pharos.walker.beans.OtherFeedbackBean;
import com.pharos.walker.beans.PlanEntity;
import com.pharos.walker.beans.SubPlanEntity;
import com.pharos.walker.beans.TrainDataEntity;
import com.pharos.walker.beans.UserBean;
import com.pharos.walker.beans.UserTrainRecordEntity;

import com.pharos.walker.greendao.ActivationCodeBeanDao;
import com.pharos.walker.greendao.EvaluateEntityDao;
import com.pharos.walker.greendao.GloveBeanDao;
import com.pharos.walker.greendao.OtherFeedbackBeanDao;
import com.pharos.walker.greendao.PlanEntityDao;
import com.pharos.walker.greendao.SubPlanEntityDao;
import com.pharos.walker.greendao.TrainDataEntityDao;
import com.pharos.walker.greendao.UserBeanDao;
import com.pharos.walker.greendao.UserTrainRecordEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig activationCodeBeanDaoConfig;
    private final DaoConfig evaluateEntityDaoConfig;
    private final DaoConfig gloveBeanDaoConfig;
    private final DaoConfig otherFeedbackBeanDaoConfig;
    private final DaoConfig planEntityDaoConfig;
    private final DaoConfig subPlanEntityDaoConfig;
    private final DaoConfig trainDataEntityDaoConfig;
    private final DaoConfig userBeanDaoConfig;
    private final DaoConfig userTrainRecordEntityDaoConfig;

    private final ActivationCodeBeanDao activationCodeBeanDao;
    private final EvaluateEntityDao evaluateEntityDao;
    private final GloveBeanDao gloveBeanDao;
    private final OtherFeedbackBeanDao otherFeedbackBeanDao;
    private final PlanEntityDao planEntityDao;
    private final SubPlanEntityDao subPlanEntityDao;
    private final TrainDataEntityDao trainDataEntityDao;
    private final UserBeanDao userBeanDao;
    private final UserTrainRecordEntityDao userTrainRecordEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        activationCodeBeanDaoConfig = daoConfigMap.get(ActivationCodeBeanDao.class).clone();
        activationCodeBeanDaoConfig.initIdentityScope(type);

        evaluateEntityDaoConfig = daoConfigMap.get(EvaluateEntityDao.class).clone();
        evaluateEntityDaoConfig.initIdentityScope(type);

        gloveBeanDaoConfig = daoConfigMap.get(GloveBeanDao.class).clone();
        gloveBeanDaoConfig.initIdentityScope(type);

        otherFeedbackBeanDaoConfig = daoConfigMap.get(OtherFeedbackBeanDao.class).clone();
        otherFeedbackBeanDaoConfig.initIdentityScope(type);

        planEntityDaoConfig = daoConfigMap.get(PlanEntityDao.class).clone();
        planEntityDaoConfig.initIdentityScope(type);

        subPlanEntityDaoConfig = daoConfigMap.get(SubPlanEntityDao.class).clone();
        subPlanEntityDaoConfig.initIdentityScope(type);

        trainDataEntityDaoConfig = daoConfigMap.get(TrainDataEntityDao.class).clone();
        trainDataEntityDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        userTrainRecordEntityDaoConfig = daoConfigMap.get(UserTrainRecordEntityDao.class).clone();
        userTrainRecordEntityDaoConfig.initIdentityScope(type);

        activationCodeBeanDao = new ActivationCodeBeanDao(activationCodeBeanDaoConfig, this);
        evaluateEntityDao = new EvaluateEntityDao(evaluateEntityDaoConfig, this);
        gloveBeanDao = new GloveBeanDao(gloveBeanDaoConfig, this);
        otherFeedbackBeanDao = new OtherFeedbackBeanDao(otherFeedbackBeanDaoConfig, this);
        planEntityDao = new PlanEntityDao(planEntityDaoConfig, this);
        subPlanEntityDao = new SubPlanEntityDao(subPlanEntityDaoConfig, this);
        trainDataEntityDao = new TrainDataEntityDao(trainDataEntityDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);
        userTrainRecordEntityDao = new UserTrainRecordEntityDao(userTrainRecordEntityDaoConfig, this);

        registerDao(ActivationCodeBean.class, activationCodeBeanDao);
        registerDao(EvaluateEntity.class, evaluateEntityDao);
        registerDao(GloveBean.class, gloveBeanDao);
        registerDao(OtherFeedbackBean.class, otherFeedbackBeanDao);
        registerDao(PlanEntity.class, planEntityDao);
        registerDao(SubPlanEntity.class, subPlanEntityDao);
        registerDao(TrainDataEntity.class, trainDataEntityDao);
        registerDao(UserBean.class, userBeanDao);
        registerDao(UserTrainRecordEntity.class, userTrainRecordEntityDao);
    }
    
    public void clear() {
        activationCodeBeanDaoConfig.clearIdentityScope();
        evaluateEntityDaoConfig.clearIdentityScope();
        gloveBeanDaoConfig.clearIdentityScope();
        otherFeedbackBeanDaoConfig.clearIdentityScope();
        planEntityDaoConfig.clearIdentityScope();
        subPlanEntityDaoConfig.clearIdentityScope();
        trainDataEntityDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
        userTrainRecordEntityDaoConfig.clearIdentityScope();
    }

    public ActivationCodeBeanDao getActivationCodeBeanDao() {
        return activationCodeBeanDao;
    }

    public EvaluateEntityDao getEvaluateEntityDao() {
        return evaluateEntityDao;
    }

    public GloveBeanDao getGloveBeanDao() {
        return gloveBeanDao;
    }

    public OtherFeedbackBeanDao getOtherFeedbackBeanDao() {
        return otherFeedbackBeanDao;
    }

    public PlanEntityDao getPlanEntityDao() {
        return planEntityDao;
    }

    public SubPlanEntityDao getSubPlanEntityDao() {
        return subPlanEntityDao;
    }

    public TrainDataEntityDao getTrainDataEntityDao() {
        return trainDataEntityDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

    public UserTrainRecordEntityDao getUserTrainRecordEntityDao() {
        return userTrainRecordEntityDao;
    }

}
